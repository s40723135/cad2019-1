<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Week</h1>
<h2>week2</h2>
<p>week2：建立個人網站</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KQGeJmjNM3g" width="560"></iframe></p>
<ul>
<li>新增新的倉儲，命名為「cad2019」，並設公開</li>
<li>下載 <a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件.7z</a><span> (編譯  Solvespace 用)</span></li>
<li><span>進入tmp 到 "home_mdecourse"，用Sc1開啟 .gitconfig</span></li>
<li>利用submodule獲得子模組</li>
<li>開設近端伺服器修改網頁內容</li>
<li>將修改內容push上去</li>
</ul>
<h2>week3</h2>
<p>week3：編譯<span>solvespace</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ofn2jmadyn8" width="560"></iframe></span></p>
<p></p>
<ul>
<li>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe</li>
<li>git version 查驗 git 版本</li>
<li>git 2.13 版本以上, 可以使用下列 git clone <span>--recurse-submodules 取得所有子模組資料</span></li>
<li>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace</li>
<li>edit Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714</li>
<li>#list(APPEND ANGLE_DEFINITIONS<br/>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/>endif()</li>
<li>需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中:</li>
<li>cd solvespace</li>
<li>cd extlib</li>
<li>cd libpng</li>
<li>mkdir build</li>
<li>cd build</li>
<li>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>mingw32-make</li>
<li>rename libpng.dll.a to libpng_static.a and copy to Y:\msys64\mingw64\lib</li>
<li>接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行:</li>
<li><span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</span><br/><span>mingw32-make</span></li>
</ul>
<h2>Week5</h2>
<p>week5：<strong>繪製   </strong><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">Solvespace Tutorial 11: Cubic Bezier Spline tool (Vase)</yt-formatted-string><br/><span><br/></span><span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_Ywrsypq42o" width="560"></iframe></p>
<ul>
<li><span>開啟自己隨身的Solvespace程式。</span></li>
<li><span>使用三點曲線繪製外型</span></li>
<li><span>使用直線繪製底座即使圖形成為封閉面</span><span></span></li>
<li><span>選擇一條線作為旋轉軸，使圖形繞著軸旋轉</span></li>
</ul>